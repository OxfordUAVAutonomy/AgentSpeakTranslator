settings {
  input = exploration.asl;
  output = exploration.c;
  header = exploration.h;
  basics = actions.h;
};

includes {
  #include <stdbool.h>
  #include "types.h"
};

basics {
  // Returns true if the two given rooms are equal
  bool equalRooms(roomt, roomt);
  // Takes a room and returns true if this room is marked as explored.
  bool explored(roomt);
  // Find all doors in room
  void findDoors(void);
  // Identifies the room the UAV is currently in and returns information accordingly
  roomt getCurrentRoom(void);
  // Returns the next unused door
  doort getNextDoor(roomt);
  // Go through the given door
  void goThrough(doort);
  // Returns true if the current room has unused doors
  bool hasUnusedDoor(roomt);
  // Marks room as explored
  void markExplored(roomt);
  // Marks door as used
  void markUsed(doort);
  // Issues a notification to the user using ROS internals.
  void notifyUser(messaget);

  // Usual stack operations
  void popUsedDoorStack(void);
  void pushUsedDoorStack(doort);
  doort topUsedDoorStack(void);

  // we will not use this one
  void updateBeliefs();
};

types {
  // elements of belief base
  initialRoom(roomt);
  currentRoom(roomt);

  // triggering events
  init(void);
  explore(void);
  exploreRoom(void);
  flyToNextRoom(void);
  flyThroughDoor(doort);
};

// We don't need any of these so far
/*settables {
};

triggerables {
};*/

